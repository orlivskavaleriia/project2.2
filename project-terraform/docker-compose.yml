version: '3'

services:
  backend_rds:
    build:
      context: ./backend_rds
      dockerfile: Dockerfile
    image: 891612544658.dkr.ecr.eu-central-1.amazonaws.com/glovo-backend_rds-repo:latest
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
    ports:
      - "8000:8000"
    networks:
      - backend_network
    depends_on:
      - postgres
      - redis

  backend_redis:
    build:
      context: ./backend_redis
      dockerfile: Dockerfile
    image: 891612544658.dkr.ecr.eu-central-1.amazonaws.com/glovo-backend_redis-repo:latest
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8001:8001"
    networks:
      - backend_network
    depends_on:
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: 891612544658.dkr.ecr.eu-central-1.amazonaws.com/glovo-frontend-repo:latest
    ports:
      - "3000:3000"
    networks:
      - frontend_network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend_network

  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  pgdata:
